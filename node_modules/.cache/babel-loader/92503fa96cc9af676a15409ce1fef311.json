{"ast":null,"code":"var _jsxFileName = \"/home/efficient/Desktop/projects/twitter-clone/src/components/Tweet.jsx\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = _ref => {\n  let {\n    text,\n    author,\n    date\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: text.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"by \", author, \" on \", date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"names":["React","Card","Tweet","text","author","date","width","toUpperCase"],"sources":["/home/efficient/Desktop/projects/twitter-clone/src/components/Tweet.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Tweet = ({ text, author, date }) => {\n  return (\n    <div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>{text.toUpperCase()}</Card.Title>\n          <Card.Text>\n            by {author} on {date}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Tweet;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,KAAK,GAAG,QAA4B;EAAA,IAA3B;IAAEC,IAAF;IAAQC,MAAR;IAAgBC;EAAhB,CAA2B;EACxC,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAT,CAAb;MAAA,wBACE,QAAC,IAAD,CAAM,GAAN;QAAU,OAAO,EAAC,KAAlB;QAAwB,GAAG,EAAC;MAA5B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA,UAAaH,IAAI,CAACI,WAAL;QAAb;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;UAAA,kBACMH,MADN,UACkBC,IADlB;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAdD;;KAAMH,K;AAgBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}