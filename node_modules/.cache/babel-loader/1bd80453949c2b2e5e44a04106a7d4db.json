{"ast":null,"code":"var _jsxFileName = \"/home/efficient/Desktop/projects/twitter-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Tweet from \"./components/Tweet\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastId = 7;\n\nfunction App() {\n  _s();\n\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n  var yyyy = today.getFullYear();\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n  const [tweets, setTweets] = useState([]);\n  const [tweetRefState, setTweetRefState] = useState(\"\");\n  const [authorName, setAuthorName] = useState(\"\");\n  const tweetRef = useRef(null);\n  const authorRef = useRef(null);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  const addTweet = e => {\n    e.preventDefault();\n    lastId = lastId + 1;\n    setTweets([{\n      id: lastId,\n      text: tweetRefState,\n      author: authorName,\n      date: today\n    }, ...tweets]);\n    setAuthorName(\"\");\n    setTweetRefState(\"\");\n  };\n\n  const fetchTweets = () => {\n    axios.get(`https://coursera-twitter-api.herokuapp.com/tweets`).then(data => {\n      console.log(data);\n      console.log(data.data);\n      setTweets(data.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteTweet = id => {\n    const filterTweets = tweets.filter(tweet => tweet.id !== id);\n    setTweets(filterTweets);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#1DA1F2\"\n    },\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTweet,\n      style: {\n        width: \"30rem\",\n        margin: \"0 auto 70px auto\",\n        paddingTop: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputEmail1\",\n          children: \"Tweet here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"authorName\",\n          name: \"authorName\",\n          value: authorName,\n          class: \"form-control\",\n          placeholder: \"hey what's your name (because there is no backend here)\",\n          ref: authorRef,\n          onChange: () => {\n            setAuthorName(authorRef.current.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tweet\",\n          name: \"tweet\",\n          value: tweetRefState,\n          class: \"form-control\",\n          placeholder: \"Whats happening?\",\n          ref: tweetRef,\n          onChange: () => {\n            setTweetRefState(tweetRef.current.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"emailHelp\",\n          class: \"form-text text-muted\",\n          children: \"Twitter is definately the app for you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), tweets.map((tweet, key) => {\n      key = tweet.id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tweet, { ...tweet,\n          deleteTweet: () => {\n            deleteTweet(key);\n            console.log(key);\n          }\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        border: \"2px solid white\",\n        margin: \"0 auto 0 auto\",\n        width: \"30rem\",\n        padding: \"5px\",\n        color: \"black\",\n        background: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"I am the react king\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"by Ijezie Daniel on 2022-08-03\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"chxBoa/XTKoH7UKwcvQE9Z/Z2Jk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Tweet","axios","useEffect","useRef","useState","Button","Card","lastId","App","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","tweets","setTweets","tweetRefState","setTweetRefState","authorName","setAuthorName","tweetRef","authorRef","fetchTweets","addTweet","e","preventDefault","id","text","author","date","get","then","data","console","log","catch","err","deleteTweet","filterTweets","filter","tweet","background","width","margin","paddingTop","current","value","map","key","border","padding","color"],"sources":["/home/efficient/Desktop/projects/twitter-clone/src/App.js"],"sourcesContent":["import Tweet from \"./components/Tweet\";\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\n\nlet lastId = 7;\n\nfunction App() {\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  var yyyy = today.getFullYear();\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n  const [tweets, setTweets] = useState([]);\n  const [tweetRefState, setTweetRefState] = useState(\"\");\n  const [authorName, setAuthorName] = useState(\"\");\n  const tweetRef = useRef(null);\n  const authorRef = useRef(null);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  const addTweet = (e) => {\n    e.preventDefault();\n    lastId = lastId + 1;\n    setTweets([\n      { id: lastId, text: tweetRefState, author: authorName, date: today },\n      ...tweets,\n    ]);\n    setAuthorName(\"\");\n    setTweetRefState(\"\");\n  };\n\n  const fetchTweets = () => {\n    axios\n      .get(`https://coursera-twitter-api.herokuapp.com/tweets`)\n      .then((data) => {\n        console.log(data);\n        console.log(data.data);\n        setTweets(data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteTweet = (id) => {\n    const filterTweets = tweets.filter((tweet) => tweet.id !== id);\n    setTweets(filterTweets);\n  };\n  return (\n    <div style={{ background: \"#1DA1F2\" }} className=\"App\">\n      <form\n        onSubmit={addTweet}\n        style={{\n          width: \"30rem\",\n          margin: \"0 auto 70px auto\",\n          paddingTop: \"40px\",\n        }}\n      >\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Tweet here</label>\n          <input\n            type=\"authorName\"\n            name=\"authorName\"\n            value={authorName}\n            class=\"form-control\"\n            placeholder=\"hey what's your name (because there is no backend here)\"\n            ref={authorRef}\n            onChange={() => {\n              setAuthorName(authorRef.current.value);\n            }}\n          />\n          <input\n            type=\"tweet\"\n            name=\"tweet\"\n            value={tweetRefState}\n            class=\"form-control\"\n            placeholder=\"Whats happening?\"\n            ref={tweetRef}\n            onChange={() => {\n              setTweetRefState(tweetRef.current.value);\n            }}\n          />\n          <small id=\"emailHelp\" class=\"form-text text-muted\">\n            Twitter is definately the app for you\n          </small>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\">\n          Tweet\n        </button>\n      </form>\n      {tweets.map((tweet, key) => {\n        key = tweet.id;\n\n        return (\n          <div>\n            <Tweet\n              key={key}\n              {...tweet}\n              deleteTweet={() => {\n                deleteTweet(key);\n                console.log(key);\n              }}\n            />\n          </div>\n        );\n      })}\n      <Card\n        style={{\n          border: \"2px solid white\",\n          margin: \"0 auto 0 auto\",\n          width: \"30rem\",\n          padding: \"5px\",\n          color: \"black\",\n          background: \"white\",\n        }}\n      >\n        <Card.Body>\n          <Card.Title>I am the react king</Card.Title>\n          <Card.Text>by Ijezie Daniel on 2022-08-03</Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}